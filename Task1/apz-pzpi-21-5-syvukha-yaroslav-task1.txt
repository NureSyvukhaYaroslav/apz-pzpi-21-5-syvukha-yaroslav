1.	Business Requirements (БІЗНЕС ВИМОГИ)
1.1.	Background (Передумови)

З плином часу якість інтернет-зв'язку та технологій постійно поліпшується, що відображається на якості нашого життя. Проте, люди часто не починають пильнувати за своїм здоров'ям, доки це не стає вимушеною дією. З розвитком технологій зростає як кількість доступних аналізів, так і спеціалістів, проте нових способів передавати інформацію(рецепти, аналізи, результати) значно менше.
Це призводить до того, що багато людей змушені використовувати застарілі записні книжки, які швидко переповнюються, або просто носити всі документи в одній папці, що також не є зручним рішенням. Причиною цього є застаріла система яка не встигає розвиватися з плином часу. Ця стара система звикла використовути тільки старі способи пердачі інформації. Для вирішення цієї проблеми можливо створити програмну систему, яка допоможе зберігати, організовувати та швидко знаходити необхідні дані та документи. Вона має бути зручною і зрозумілою для всіх можливих користувачів. І також мати зручну інтеграцію для вже існуючих систем. Така система могла б включати в себе функції автоматичного сортування, можливість зберігання різних типів файлів та швидкого доступу до них через інтерфейс, що призначений для користувача.
	
1.2.	Business Opportunity (Бізнес Можливості)

Найближчими аналогами такої системи можуть бути інші платформи, які використовують різні технології для залучення аудиторії. Прикладами є «M.E. doc» «Дія» та «DocuSign». Коротко про них:
1.	"M.E. Doc": Це програмна система, що використовується для електронного обміну даними між користувачами, головна ідея полягає в тому щоб легко передати усілякі документи між аккаунтами користувачів, також мають інтеграцію с гугл поштою, і зручним АПІ для використання. Але пересилання документів не головна функціональність, також ця система може вести облік фінансів, складати звітність для податкових та фінансових органів, а також автоматизацію багатьох процесів, пов'язаних з фінансовою діяльністю підприємств. Крім того, M.E. Doc надає послуги з консультацій та підтримки користувачів з питань використання їх програмного забезпечення.
2.	"Дія": Ця програмна система призначена для зручного зберігання та отримування державних документів. В ній ти не маєш можливості зберігати будь-які документи. Але ця система котується державою. Вона не має вбудованої інтеграції з іншими системами, і тільки працює як однична система з замкнутим доступом.
3.	"DocuSign": Ця програмна система розроблена для підписання онлайн документів та контрактів, ця система має обсяг по всій Європі, і дуже популярною системою для цих цілей.
	Проаналізувавши аналоги та схожі системи можливо зрозуміти що всі конкуренти не на пряму направлені на медичні документи та зручне користування ними. Поки «Дія» тільки завантажувати державні документи, «M.E. doc» має непотрібну функціональність бухгалтерій а «DocuSign» використовують тільки для підписів документів. Тому можливо прийти до висновку що, не буде конкуренції з іншими системами. Головним прибутком від системи буде підписка. Всі організації які будуть її використовувати мають платити за неї.

2.	VISION OF THE SOLUTION (КОНЦЕПЦІЯ РІШЕННЯ)
2.1.	Vision Statement (Окреслення концепції)

Проект передбачає створення програмної системи, що перетворить спосіб передачі медичних документів та взаємодії з ними. Ця система зробить процес більш ефективним та зручним для користувачів.
У майбутньому обмін медичними документами буде не просто процедурою, а спільним досвідом, де кожен учасник може взаємодіяти з розумний пристрій як зручний спосіб зберігання документів, та само ідентифікація. Вони зможуть працювати як носій інформації, а також ідентифікатор користувача, для того щоб йому не було потрібно носити з собою документ підтверджуючий його особистість.
З інших частин, система надасть зручний спосіб додавання нових документів від тих фірм які ще не почали співпрацю з нашою системою, перегляд, і сортування. Зі сторони фірм ми додамо зручний інтерфейс використання нашого сервісу, щоб користувачі могли зручно і приємно ними користуватися. Передбачається що фірми будуть самі додавати документи коли вони їх створюють і хочуть видавати користовача. Та також користувач може додавати сам документи від фірм які не використовують систему, чи які не були додані по якіїсь іншій причині. Додавати буде файли типу фотографій та PDF.
Успіх нашого проекту визначатиметься рівнем задоволеності користувачів від взаємодії з медичними документами через нашу систему, збільшенням кількості організацій, які використовують нашу систему для передачі документів, а також підвищенням ефективності та прибутковості для медичних установ завдяки поліпшеному досвіду користувачів.
Данні будуть зашифровані за допомогою шифруючих алгоритмів, та будуть зберігатися в базі данних. Доступ до неї будуть мати тільки авторизовані користувачі(JWT tokens)

2.2.	Major Features (Головна функціональність)

	MF-1: Реєстрація та авторизація користувачів
	MF-2: Реєстрування пристрою для ідентифікації користувача
	MF-3: Записування даних на пристрій
	MF-4: Зчитування інформації з пристрою
	MF-5: Взаємодія телефона з пристроями через блютуз
	MF-6: Додавання документів через мобільний додаток
	MF-7:  Перегляд своїх даних та статистика через свій аккаунт
	MF-8: Багатомовний інтерфейс: Користувачі можуть користуватися додатком англійською й українською мовами.
	MF-9: Шифрування користувацьких та документів за допомогою “Advanced Encryption Standard”
	MF-10: Зберігання дат за допомогою PostgreSQL та тамошніго типу дат з додавання часових зон, і показом дат і часу в інтернаціоналізованому стандарті на сайті з використанням функції мови JavaScript
	MF-11: Адміністративна панель
	MF-12: Імпортування та Експортування даних з бази данних

3.	Scope and Limitations (РАМКИ ТА ОБМЕЖЕННЯ ПРОЄКТУ)
3.1.	 Scope of Initial Release (Рамки первинного випуску)

	Серверна (back-end) частина повинна включати:
	- реєстрацію та авторизацію користувачів: реалізація системи користувачів та механізмів входу з підтримкою ролей та прав доступу;
	- додавання документів до облікових записів користувачів;
	- редагування даних облікових записів;
	- видалення даних;
	- адміністративна панель яка надасть зручну можливість редагувати дані в системі;
	- використання AES для шифрування даних;
	- використання хешування з сіллю для зберігання паролів;
	- адміністративна панель бази данних яка надає можливість; редагування всіх данних, а також імпортування та експортування даних до БД;
	- сортування даних;
	- підрахунок статистики;
	IoT частина повинна включати:
	- реєстрація;
	- налаштування при першому запуску;
	- якщо пристрій був відключений від інтернету та його не виключили, то через деякий час він може почати вібрувати і шуміти щоб його знайшли;
	Front-end частина повинна включати:
	- реєстрація та вхід користувачів: сторінки авторизації у вже створенни аккаунт;
	- адміністративна панель, що дозволяє управління користувачами системи, управління даними системи;
	- локалізований та інтернаціоналізований інтерфейс: программа підтримує українську та англійську мови, коректно відображає дату та час, підтримує міжнародні символи;
	- панель керування документами;
	- можливість реєстрування пристроїв;
	- перегляд статистики.
	Мобільна частина повинна включати:
	- реєстрація та вхід користувачів: сторінки авторизації та реєстрації;
	- локалізований та інтернаціоналізований інтерфейс: программа підтримує українську та англійську мови, коректно відображає дату та час, підтримує міжнародні символи;
	- додавання документів;
	- запис даних до пристроїв.

3.2.	 Scope of Subsequent Releases (Рамки наступних випусків)
	
	Серверна (back-end) частина може включати:
	- аналітика даних;
	- можливість збирати відгуків від компаній;
	- підтримка АПІ для зручной інтеграції з іншими системами;
	IoT частина може включати:
	- можливість працювання без постійного підключення по інтернету, тільки один з пристроїв повинен бути, він буде працювати як передавач;
	- додавання нового функціоналу як: повна можливість працювати без підключення;
	- передавання даних GPS до серверів.
	Front-end частина може включати:
	- перегляд статистики та аналітики;
	- можливість давання відгуків;
	- перегляд останніх місце положення пристроїв на карті.
	Мобільна частина може включати:
	- перегляд останніх місце положення пристроїв на карті;
	- пошук пристроїв навіть без підключення до інтернету;
	- швидка передача даних до пристроїв через блютуз

4.3.	Operating Environment (Робоче середовище)

Даний продукт буде використовуватися через браузер на пк або за допомогою телефону та планшету. Для використання мобільного додатку має використовуватися система Android 5 або вище. Була вибрана ця версія церез повну осяжність написанной программи для всіх телефонів. 80% телефонів досі знаходяться ці цій версій. І нові телефони також підтримують старі версій программ написаних на старі версії андроїду.
Хостингом серверной частини буде Vercel. Це прекрасний вибір для легкого та швидкого розгортування серверу. Для front-end буде також використовуватися Vercel. Цей сервіс було вибрано за легку можливість розгорнути як і серверну так і сайтову частину. А головною причиною є дуже щедри безплатний план використання.
Додаток буде доступний в українській та англійській мовах завдяки локалізації та інтернаціоналізації. Яка буде отримана за допомогою бібліотеки i18n для JS.
Базою даних буде PostgreSQL, розгорнута ця бд буде не Neon Db. Він має прекрасний пакет тестовий пакет для використання а також зберігання часових данних з врахуванням часових поясів.
Для розробки серверної частини будуть використані технології Nest.js з використанням мови програмування Typescript. Цей фреймворк є дуже зручним для використння, і я маю опит праці з ним. Тому вибіт був очевидний. Середовищем розробки для цього проекту буде Visual Studio Code. Сервіси: Eslint, prettier, NEST CLI. Головними бібліотеками:  class-validator, class-transformer, TypeORM, i18n.
У веб-застосунку буде використано React для розробки, і середовищем розробки для цього також може бути Visual Studio Code. React було вибрано через мій великий опит праці з цією біблеотекою компонентів, та через легке використання. Сервіси: Eslint, prettier, Next CLI. Головними бібліотеками:  Tailwind (для розробки стилів сайту), yup (валідація), react-hook-forms (створення зручних форм)
Для розробки IoT частини проекту буде використовуватися ESP32, і середовищем розробки VS Code з використанням мови програмування MicroPython. На пристрої Arduino будуть встановлені Wi-Fi модулі та інш.
Мобільний додаток буде розроблено на Kotlin. Середовищем розробки може бути Android Studio.