// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  email          String        @unique
  password       String?
  provider       Provider?
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  roles          Role[]
  Token          Token[]
  files          File[]
  nickname       String        @unique
  organizationId String?       @map("organization_id")
  organization   Organization? @relation(fields: [organizationId], references: [id])

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user-agent")

  @@map("tokens")
}

model Organization {
  id             String   @id @default(uuid())
  name           String
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  accessPassword String
  files          File[]
  User           User[]

  @@map("organizations")
}

model File {
  id        String   @id @default(uuid())
  type      String
  data      Bytes
  createdAt DateTime @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  organization   Organization? @relation(fields: [organizationId], references: [id], onDelete: SetNull)
  organizationId String?       @map("organization_id")

  documentType String? @map("document_type")

  @@map("files")
}

enum Role {
  ADMIN
  USER
}

enum Provider {
  GOOGLE
}
